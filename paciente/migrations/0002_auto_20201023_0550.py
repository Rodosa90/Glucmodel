# Generated by Django 3.1.2 on 2020-10-23 05:50

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('medico', '0001_initial'),
        ('users', '0001_initial'),
        ('paciente', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Tratamiento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=250)),
                ('name', models.CharField(max_length=250)),
            ],
            options={
                'db_table': 'tratamiento',
            },
        ),
        migrations.CreateModel(
            name='Paciente',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='users.user')),
                ('birth_date', models.DateField()),
                ('diabetes_type', models.CharField(choices=[('Tipo 1', 'Diabetes de tipo 1'), ('Tipo 2', 'Diabetes de tipo 2'), ('Otro', 'Diabetes de otro tipo')], max_length=10)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('first_date', models.DateTimeField(blank=True, help_text='Primera fecha con datos del paciente', null=True)),
                ('last_date', models.DateTimeField(blank=True, help_text='Ultima fecha con datos del paciente', null=True)),
                ('patient_ID', models.CharField(max_length=250, null=True)),
                ('doctor_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='medico.medico')),
                ('treatment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='paciente.tratamiento')),
            ],
            options={
                'db_table': 'paciente',
            },
            bases=('users.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='insulina_rapida',
            name='id_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='paciente.paciente'),
        ),
        migrations.AddField(
            model_name='insulina_lenta',
            name='id_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='paciente.paciente'),
        ),
        migrations.AddField(
            model_name='hito_roche',
            name='id_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='paciente.paciente'),
        ),
        migrations.AddField(
            model_name='glucosa_sangre',
            name='id_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='paciente.paciente'),
        ),
        migrations.AddField(
            model_name='glucosa_medtronic',
            name='id_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='paciente.paciente'),
        ),
        migrations.AddField(
            model_name='glucosa_freestyle',
            name='id_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='paciente.paciente'),
        ),
        migrations.AddField(
            model_name='evento_insulina_rapida',
            name='id_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='paciente.paciente'),
        ),
        migrations.AddField(
            model_name='evento_insulina_lenta',
            name='id_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='paciente.paciente'),
        ),
        migrations.AddField(
            model_name='evento_carbohidratos',
            name='id_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='paciente.paciente'),
        ),
        migrations.AddField(
            model_name='cetonas',
            name='id_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='paciente.paciente'),
        ),
        migrations.AddField(
            model_name='carb_ratio',
            name='id_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='paciente.paciente'),
        ),
        migrations.AddField(
            model_name='carb_input',
            name='id_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='paciente.paciente'),
        ),
        migrations.AddField(
            model_name='calorias',
            name='id_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='paciente.paciente'),
        ),
        migrations.AddField(
            model_name='bolus_volume_delivered',
            name='id_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='paciente.paciente'),
        ),
        migrations.AddField(
            model_name='bolus_type',
            name='id_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='paciente.paciente'),
        ),
        migrations.AddField(
            model_name='basal_rate',
            name='id_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='paciente.paciente'),
        ),
        migrations.CreateModel(
            name='Suenio_resumen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
                ('sleep_main_sleep', models.BooleanField()),
                ('sleep_efficiency', models.FloatField(max_length=250)),
                ('sleep_duration', models.FloatField(max_length=250)),
                ('sleep_minutes_asleep', models.FloatField(max_length=250)),
                ('sleep_minutes_light', models.FloatField(max_length=250)),
                ('sleep_minutes_deep', models.FloatField(max_length=250)),
                ('sleep_minutes_rem', models.FloatField(max_length=250)),
                ('sleep_minutes_awake', models.FloatField(max_length=250)),
                ('sleep_minutes_in_bed', models.FloatField(max_length=250)),
                ('id_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='paciente.paciente')),
            ],
            options={
                'db_table': 'suenio_resumen',
                'unique_together': {('id_user', 'time')},
            },
        ),
        migrations.CreateModel(
            name='Suenio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
                ('sleep_state', models.CharField(max_length=250)),
                ('id_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='paciente.paciente')),
            ],
            options={
                'db_table': 'suenio',
                'unique_together': {('id_user', 'time')},
            },
        ),
        migrations.CreateModel(
            name='Siesta_resumen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
                ('nap_main_sleep', models.BooleanField()),
                ('nap_efficiency', models.FloatField(max_length=250)),
                ('nap_duration', models.FloatField(max_length=250)),
                ('nap_minutes_asleep', models.FloatField(max_length=250)),
                ('nap_minutes_light', models.FloatField(max_length=250)),
                ('nap_minutes_deep', models.FloatField(max_length=250)),
                ('nap_minutes_rem', models.FloatField(max_length=250)),
                ('nap_minutes_awake', models.FloatField(max_length=250)),
                ('nap_minutes_in_bed', models.FloatField(max_length=250)),
                ('nap_minutes_restless', models.FloatField(max_length=250)),
                ('id_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='paciente.paciente')),
            ],
            options={
                'db_table': 'siesta_resumen',
                'unique_together': {('id_user', 'time')},
            },
        ),
        migrations.CreateModel(
            name='Siesta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
                ('nap_state', models.CharField(max_length=250)),
                ('id_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='paciente.paciente')),
            ],
            options={
                'db_table': 'siesta',
                'unique_together': {('id_user', 'time')},
            },
        ),
        migrations.CreateModel(
            name='Ritmo_cardiaco',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
                ('heart_rate', models.FloatField(max_length=250)),
                ('id_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='paciente.paciente')),
            ],
            options={
                'db_table': 'ritmo_cardiaco',
                'unique_together': {('id_user', 'time')},
            },
        ),
        migrations.CreateModel(
            name='Peso',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
                ('peso', models.FloatField(max_length=250)),
                ('id_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='paciente.paciente')),
            ],
            options={
                'db_table': 'peso',
                'unique_together': {('id_user', 'time')},
            },
        ),
        migrations.CreateModel(
            name='Pasos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
                ('steps', models.FloatField(max_length=250)),
                ('id_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='paciente.paciente')),
            ],
            options={
                'db_table': 'pasos',
                'unique_together': {('id_user', 'time')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='insulina_rapida',
            unique_together={('id_user', 'time')},
        ),
        migrations.AlterUniqueTogether(
            name='insulina_lenta',
            unique_together={('id_user', 'time')},
        ),
        migrations.AlterUniqueTogether(
            name='hito_roche',
            unique_together={('id_user', 'time')},
        ),
        migrations.AlterUniqueTogether(
            name='glucosa_sangre',
            unique_together={('id_user', 'time')},
        ),
        migrations.AlterUniqueTogether(
            name='glucosa_medtronic',
            unique_together={('id_user', 'time')},
        ),
        migrations.AlterUniqueTogether(
            name='glucosa_freestyle',
            unique_together={('id_user', 'time')},
        ),
        migrations.AlterUniqueTogether(
            name='evento_insulina_rapida',
            unique_together={('id_user', 'time')},
        ),
        migrations.AlterUniqueTogether(
            name='evento_insulina_lenta',
            unique_together={('id_user', 'time')},
        ),
        migrations.AlterUniqueTogether(
            name='evento_carbohidratos',
            unique_together={('id_user', 'time')},
        ),
        migrations.AlterUniqueTogether(
            name='cetonas',
            unique_together={('id_user', 'time')},
        ),
        migrations.AlterUniqueTogether(
            name='carb_ratio',
            unique_together={('id_user', 'time')},
        ),
        migrations.AlterUniqueTogether(
            name='carb_input',
            unique_together={('id_user', 'time')},
        ),
        migrations.AlterUniqueTogether(
            name='calorias',
            unique_together={('id_user', 'time')},
        ),
        migrations.AlterUniqueTogether(
            name='bolus_volume_delivered',
            unique_together={('id_user', 'time')},
        ),
        migrations.AlterUniqueTogether(
            name='bolus_type',
            unique_together={('id_user', 'time')},
        ),
        migrations.AlterUniqueTogether(
            name='basal_rate',
            unique_together={('id_user', 'time')},
        ),
    ]
